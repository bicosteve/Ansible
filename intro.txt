THESE ARE NOTES FOR ANSIBLE

1. YAML - yet another markup language

- use two spaces on yml
- consit of two things, list and dictionary

1. List 

shopping:
  - eggs
  - milk 
  - fruits
# list is a collection of records.

2. Dictionary 
- are in the form of key value pairs
key: value 
- dictionary are nested.

purchased:
  fruit:
    apple:1
    banana:3
    orange:5
  needToBuy:
    - coffee
    - tea
    - milk 


  // Ansible modules 
  use the 'state' on the docs.
  - uses 'past' language 
  - eg installed, removed, present


// Ansible Automation
- create a virtual environment on your project
- activate the virtual environment
- install ansible 
- check for ansible version with ansible --version 
- create ansible.cfg file on the root folder of your project 
- create a hosts file on the root folder of your project 
- on the ansible.cfg write [defaults]
- under it, write inventory = hosts 
- hosts should have [all]
- install ansible using 
- verify ansible configuration with => ansible all -m ping 
- check python version on your AWS node 
- verify passwordless access from your ansible engine to ansible client
- add hosts in inventory file and test ansible connection 

// Connecting to AWS Node 
- Log to AWS and start your instance
- select the node to launch 
- Click on 'Actions' then click on 'Connect' 
- use EC2 instance connect using ec2-user and click on 'Connect' 
- you will be logged into your node with its ip address.
- for external access to your aws node, use public IPv4 address or public ipv4 DNS 
- on your node's terminal, check for the python version with ' which python3 '
- check the connectivity by copying the public dns and use ssh ec2-user@dns 
- eg ssh ec2-user@ec2-13-48-192-23.eu-north-1.compute.amazonaws.com
- type yes, 
- you will be connected to your aws node 
- this is happening because of public key 


// Checking Ansible Engine Connection with Ansible Client 
- navigate to your ansible virtual environment -> source env/bin/activate 
- use ll to view all the files on the folder 
- use ansible all -m ping
<-> Should get a warning 'Provided hosts list is empty, only localhost is available.' 
- define some hosts 
- open nano or vim 
- user [all] write ec2-user@awspublicdns 
- ec2-user@ec2-13-48-192-23.eu-north-1.compute.amazonaws.com
- can also be public ip address 
-> ec2-user@13.48.192.23
-> save changes and leave nano or vim 
- Execuate command ' ansible all -m ping ' 
- should return an object with ' SUCCESS' ping - pong 


// Ansible Directory Structure
- original importan files are ansible.cfg
- hosts
- in the config file, we are defining hosts 
- in the host file we are defining the servers which we want to access 
- config has hosts 
- hosts has servers 

- In case of many environment, we will not use hosts file but we will create different files for configs for the environment servers.
- eg Dev ips, Per Ips, Stg Ips 
- these then will be mapped into ansible.cfg file 
- point your inventory on ansible.cfg to any of the hosts files defined .




  